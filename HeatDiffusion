"""
-----------------------------------------------------------
One Dimensional Heat Diffusion Simulation

Two walls separated by length L of different temperatures 
solving for thediffusion of heat in between the walls
-----------------------------------------------------------
"""

import numpy as np 
import matplotlib.pyplot as plt


# Initial Variables
L = 0.1                 # meters, length L for the distance between the two walls
n = 10                  # number of cells or nodes between the walls
T0 = 0                  # Celcius, initial temperature of region in between walls
T1s = 200               # Celcius, initial temperature of the left wall
T2s = 50                # Celcius, initial temperature of the right wall
dx = L/n                # length of cell
alpha = 0.0001          # Watts/(meter * Kelvin), thermal conductivity
t_final = 60            # seconds, final time
dt = 0.1                # time step

x = np.linspace(dx/2, L-dx/2, n)    # vector of reference points for each node at the center of the node

T = np.ones(n) * T0     # vector of starting temperatures
dTdt = np.empty(n)      # vector for temperature derivatives

t = np.arange(0, t_final, dt)       # vector of time steps



# Computation
plt.ion()                    # interactive mode for matplot

for i in range(0, len(t)):          # time step loop
    plt.clf()                       # clear figure
    for j in range(1, n-1):         # temperatures of each node in i time step
        dTdt[j] = alpha * (-(T[j]-T[j-1])/dx**2 + (T[j+1]-T[j])/dx**2)        # 1D heat diffusion equation
    dTdt[0] = alpha * (-(T[0]-T1s)/dx**2 + (T[1]-T[0])/dx**2)                 # special boundary condition for left wall
    dTdt[n-1] = alpha * (-(T[n-1]-T[n-2])/dx**2 + (T2s-T[n-1])/dx**2)         # special boundary condition for the right wall
    T = T + dTdt*dt                 # continually update temperature in the T vector for each time step

    plt.figure(1)
    plt.plot(x,T)
    plt.axis([0, L, 0, 300])
    plt.xlabel('Distance (m)')
    plt.ylabel('Temperature (C)')
    plt.show()
    plt.pause(0.1)



